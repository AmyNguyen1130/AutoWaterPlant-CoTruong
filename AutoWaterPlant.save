#!/usr/bin/env python
#
# Analog Input with ADC0832 chip
#
# Datasheet: http://www.ti.com/lit/ds/symlink/adc0838-n.pdf
# Part of SunFounder LCD StarterKit
# http://www.sunfounder.com/index.php?c=show&id=21&model=LCD%20Starter%20Kit
#
import pygame
import wave
import time
import os
import RPi.GPIO as GPIO

GPIO.setmode(GPIO.BCM)

# change these as desired - they're the pins connected from the
# SPI port on the ADC to the Cobbler
PIN_CLK = 18
PIN_DO  = 27
PIN_DI  = 22
PIN_CS  = 17

# set up the SPI interface pins
GPIO.setup(PIN_DI,  GPIO.OUT)
GPIO.setup(PIN_DO,  GPIO.IN)
GPIO.setup(PIN_CLK, GPIO.OUT)
GPIO.setup(PIN_CS,  GPIO.OUT)

# read SPI data from ADC8032
def getADC(channel):
	# 1. CS LOW.
        GPIO.output(PIN_CS, True)      # clear last transmission
        GPIO.output(PIN_CS, False)     # bring CS low

	# 2. Start clock
        GPIO.output(PIN_CLK, False)  # start clock low

	# 3. Input MUX address
        for i in [1,1,channel]: # start bit + mux assignment
                 if (i == 1):
                         GPIO.output(PIN_DI, True)
                 else:
                         GPIO.output(PIN_DI, False)

                 GPIO.output(PIN_CLK, True)
                 GPIO.output(PIN_CLK, False)

        # 4. read 8 ADC bits
        ad = 0
        for i in range(8):
                GPIO.output(PIN_CLK, True)
                GPIO.output(PIN_CLK, False)
                ad <<= 1 # shift bit
                if (GPIO.input(PIN_DO)):
                        ad |= 0x1 # set first bit

        # 5. reset
        GPIO.output(PIN_CS, True)

        return ad

if __name__ == "__main__":
        while True:
		adc0=getADC(0)*2
		adc1=getADC(1)*2
		moisture= 100-((adc0+adc1)*100/1020)
               	print "moisture: {} %".format(moisture)

                time.sleep(1)
		if moisture<=55:

			GPIO.setmode(GPIO.BCM)
			GPIO.setwarnings(False)
			GPIO.setup(23,GPIO.OUT)
			GPIO.output(23,GPIO.HIGH)
		else:
			GPIO.setup(23,GPIO.OUT)
			GPIO.output(23,GPIO.LOW)
		if moisture > 75:
		#	obj = wave.open('baodong.mp3','wb')
			pygame.mixer.init()
			pygame.mixer.music.load("file.mp3")
			pygame.mixer.music.set_volume(1.0)
			pygame.mixer.music.play()

			while pygame.mixer.music.get_busy() == True:
			pass
